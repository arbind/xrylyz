%rylyz{:name=>"quiz"}
  :javascript
    var quizapp = Rylyz.makeNamespace('quizapp')

    // manage phases
    quizapp.resetState = function() {
      Rylyz.timer.cancel('hide-options');
      Rylyz.timer.cancel('score-timer');
      quizapp.gamePhase = "prompted";
      quizapp.hintGiven = false;
    }
    quizapp.startPhasePromptQuestion = function(info) {
      console.log("----starting Question! " + info)
      quizapp.resetState();
      quizapp.question_id = info['question_id']
      Rylyz.timer.start('hide-options')
    }
    quizapp.startPhaseThinking = function(options) {
      console.log("----starting Answering! "  + options)
      quizapp.gamePhase = "thinking";
      quizapp.showAnswers();
      Rylyz.timer.start('score-timer');
    }
    quizapp.startPhaseAnswered = function(options) {
      console.log("----starting Answering! "  + options)
      quizapp.gamePhase = "answered";
    }
    quizapp.startPhaseFinished = function(options) {
      console.log("----finish Answering! "  + options)
      quizapp.gamePhase = "finished";
    }

    // nav
    quizapp.goBackToGame = function() {
      quizapp.resetState();
      var navEvent = {queue:'nav', type:'nav-onClick', appName:'quiz', nextScreen:'game'}
      Rylyz.event.fireEvent(navEvent);
    }

    // CSS update utilities
    quizapp.noMoreHinting = function() {
      $('.hint').removeAttr('onclick')
    }
    quizapp.noMoreAnswering = function() {
      $('.choice').removeAttr('onclick')
      quizapp.noMoreHinting();
    }
    quizapp.showAnswers = function() {
      $('.answers').css('visibility','visible');
    }

    // click handlers
    quizapp.clickQuestionScreen = function() {
      phase = quizapp.gamePhase
      console.log ("clicking with phase: " +phase)
      if ("prompted" == phase)  Rylyz.timer.stop('hide-options')
      if ( "finished" == phase) quizapp.goBackToGame();
    }

    quizapp.choose = function(num, question_id) {
      if ("thinking" != quizapp.gamePhase) return;

      Rylyz.timer.stop('score-timer')
      var answer = '.answer' + num
      $(answer).addClass('selected');
      // send choice to server
      var hiEvent= {queue:'hi', appName:'quiz', screenName:'question', type:'choose-answer', choice:num, id: question_id}
      Rylyz.event.fireEvent(hiEvent);
    }

    quizapp.hint = function(question_id) {
      if (quizapp.hintGiven) return;
      quizapp.hintGiven = true;

      //var hiEvent= {queue:'hi', appName:'quiz', screenName:'question', type:'hint', id: question_id}
      //Rylyz.event.fireEvent(hiEvent);
    }

    // hide-options timer
    quizapp.startHideOptionsTimer = function() {
      console.log("Starting Options");
    }
    quizapp.tickHideOptionsTimer = function() {
      console.log("Tick");
    }
    quizapp.stopHideOptionsTimer = function() {
      console.log("Display Options");
      quizapp.startPhaseThinking();
    }
    Rylyz.timer.register('hide-options', quizapp.tickHideOptionsTimer, 3500, false, quizapp.startHideOptionsTimer, quizapp.stopHideOptionsTimer);

    // scoreing timer
    quizapp.timeOver = 20; // seconds before time is over for player to choose answer
    quizapp.tickPeriod = 100; //scoring timer interval in milliseconds

    quizapp.startScoreTimer = function() {
      quizapp.ticks = 0;
      quizapp.scorePercent = 100; // in percentage
      console.log("Starting Score percentage: " + quizapp.scorePercent)
    }
    quizapp.tickScoreTimer = function() {
      quizapp.ticks += 1;
      var secondsSoFar = quizapp.ticks / (1000/quizapp.tickPeriod);
      var timeOverTicks = (1000/quizapp.tickPeriod) * quizapp.timeOver; // ticks till time is over
      var percentComplete = 100*(timeOverTicks - quizapp.ticks)/(timeOverTicks);
      percentComplete = Math.floor(percentComplete);
      console.log("ticks: " +quizapp.ticks+ " secondsSoFar: " +secondsSoFar+ " timerOverTicks: " + timeOverTicks + " %complete: " + percentComplete);
      quizapp.scorePercent = percentComplete;
      $('.progress').css('width', ''+ percentComplete + '%')
      console.log(quizapp.scorePercent)
      if (quizapp.ticks == timeOverTicks || 0>quizapp.scorePercent ) {
        quizapp.scorePercent = 0;
        Rylyz.timer.stop('score-timer')
        var hiEvent= {queue:'hi', appName:'quiz', screenName:'question', type:'time-over', id: quizapp.question_id}
        Rylyz.event.fireEvent(hiEvent);
      }

    }
    quizapp.stopScoreTimer = function() {
      quizapp.scorePercent += 1;
      console.log("Final Score: " + quizapp.scorePercent)
    }
    Rylyz.timer.register('score-timer', quizapp.tickScoreTimer, quizapp.tickPeriod, true, quizapp.startScoreTimer, quizapp.stopScoreTimer);


  %app{:name=>"quiz", "data-defaults"=>"{title:'Quiz'}", :"start-screen" => "game"}
    %screen{:name=>"input-nickname"}
    %screen{:name=>"game"}
    %screen{:name=>"game-old"}
    %screen{:name=>"question"}
    %screen{:name=>"leaderboard"}
    %screen{:name=>"submit-question"}


  %screen{:name=>"input-nickname"}
    #signin
      %h1 Play Quiz
      %form{:id=>"nickname-form", :class=>"nickname", :target=>"", :action => "", :method => "", :name=>"nickname"}
        %h3 Please enter your nickname:
        .field
          %input.text{:type => "text", :name => "nickname", :placeholder => "i.e. tenderlovemaking"}
        .field
          %a.button.play{:onclick=>"Rylyz.sendForm(this)"} Start Playing


  %screen{:name=>"game"}
    #quiz-game
      %object{:name=>"header"}
      #rapp-container.trivia
        .questions
          %collection{:name=>"level1-questions"}
          %collection{:name=>"level2-questions"}
          %collection{:name=>"level3-questions"}

  %object{:name=>"header"}
    #close-rylyz
      Close
    .rheader
      #rapp-name
        Trivia
      %p#rscore
        100

  %collection{:name=>"level1-questions", :item=>"question-item", "data-defaultss"=>"[{level:1},{level:2},{level:3},{level:4},{level:5}]"}
    %ul.rset
      %collection

  %collection{:name=>"level2-questions", :item=>"question-item", "data-defaultss"=>"[{level:1},{level:2},{level:3},{level:4},{level:5}]"}
    %ul.rset
      %collection

  %collection{:name=>"level3-questions", :item=>"question-item", "data-defaultss"=>"[{level:1},{level:2},{level:3},{level:4},{level:5}]"}
    %ul.rset
      %collection

  %item{:name=>"question-item"}
    ! [! if (answered) { !]
    %li
      %a.rquestion.runlocked.ranswered
        %span.rcheck
    ! [! } else { !]
    %li
      %a.rquestion.runlocked{"fire-onClick"=>"{queue:'hi', type:'select-question', select:'[[id]]'}"}
        %span.rcheck
    ! [! } !]


  %screen{:name=>"question"}
    #quiz-game
      %object{:name=>"header"}
      .question-canvas{:onclick => "quizapp.clickQuestionScreen();"}
        .about
          About
        #progress-bar
          .progress
        .score
          99
        %object{:name=>"prompt"}


  %object{:name=>"prompt", "data-defaults"=>"{id: '', prompt:'', answer1:'', answer2:'', answer3:'', answer4:''}"}
    #trivia
      %h1
        [[prompt]]
      .inner
        #trivia-picks
          %h2{:style => "color: black;"} Choose your answer:
          .choices
            .answers
              .choice.answer1{:onclick => "quizapp.choose(1, '[[id]]')"}
                [[answer1]]
              .choice.answer2{:onclick => "quizapp.choose(2, '[[id]]')"}
                [[answer2]]
              .choice.answer3{:onclick => "quizapp.choose(3, '[[id]]')"}
                [[answer3]]
              .choice.answer4{:onclick => "quizapp.choose(4, '[[id]]')"}
                [[answer4]]
        #trivia-results
          %object{:name=>"status"}
          %collection{:name=>"leaders"}
    .button-bar.question-menu
      .button.hint{onClick: "quizapp.hint('[[id]]');"}
        Hint

  %object{:name=>"status", "data-defaults" => "{status:'...', klass:'hidden'}"}
    %div{:class => '[[klass]]'}
      %h2#status
        [[status]]

  %collection{:name=>"leaders", :item=>"leader", "data-defaults"=>"[{nickname:'mike', score:10},{nickname:'john', score:20}]"}
    %h2 Leaders
    %collection

  %item{:name=>"leader"}
    .leader
      [[nickname]] - [[score]]


  %screen{:name=>"leaderboard"}
    %collection{:name=>"leaders"}
    .button-bar
      .button{"nav-onClick"=>"game"} Back


  %screen{:name=>"submit-question"}
    .button-bar
      .button{"nav-onClick"=>"game"} Back

